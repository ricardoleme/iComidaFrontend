{"version":3,"sources":["components/Cabecalho.js","components/Rodape.js","pages/Inicio.js","constants/config.js","pages/Categorias.js","routes/Rotas.js","App.js","index.js"],"names":["Cabecalho","Navbar","bg","variant","Brand","Nav","className","Link","href","Rodape","fixed","Inicio","Container","fluid","Row","Col","xs","lg","BACKEND","Categorias","valorInicial","nome","status","useState","categoria","setCategoria","categorias","setCategorias","carregandoCategorias","setCarregandoCategorias","erros","setErros","aviso","setAviso","salvandoCategorias","setSalvandoCategorias","confirmaExclusao","setConfirmaExclusao","obterCategorias","a","url","fetch","then","response","json","data","catch","error","console","message","useEffect","document","title","validaErrosCategoria","novosErros","length","event","preventDefault","Object","keys","metodo","hasOwnProperty","method","headers","Accept","body","JSON","stringify","_id","Form","Group","controlId","Label","Control","name","placeholder","value","onChange","e","target","isInvalid","Feedback","type","Check","label","checked","Button","onClick","salvarCategoria","Spinner","animation","size","Table","striped","bordered","map","item","Date","createdAt","toLocaleDateString","colSpan","Toast","onClose","show","delay","autohide","style","position","top","right","Header","closeButton","Body","Modal","onHide","Title","Footer","excluirCategoria","Rotas","exact","path","component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ba0f33c0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\n//Para consultar os ícones: https://react-icons.github.io/react-icons/icons?name=md\r\nimport { MdRestaurantMenu,  MdHome, MdLocalPizza } from 'react-icons/md'\r\n\r\nconst Cabecalho = () => {\r\n    return (\r\n    <Navbar bg=\"primary\" variant=\"dark\">\r\n        <Navbar.Brand><MdLocalPizza/> iComida</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#/\"><MdHome/> Início</Nav.Link>\r\n            <Nav.Link href=\"#/categorias\"><MdRestaurantMenu/> Categorias</Nav.Link>\r\n        </Nav>\r\n    </Navbar>\r\n    )\r\n}\r\n\r\nexport default Cabecalho","import React from 'react'\r\n\r\nimport Navbar from 'react-bootstrap/Navbar'\r\n\r\nimport { MdLocalPizza } from 'react-icons/md'\r\n\r\nconst Rodape = () => {\r\n    return(\r\n<Navbar bg=\"dark\" fixed=\"bottom\">\r\n    <Navbar.Brand className=\"text-light\">\r\n        <MdLocalPizza/> iComida &copy; - Todos os direitos reservados\r\n    </Navbar.Brand>\r\n</Navbar>\r\n    )\r\n}\r\n\r\nexport default Rodape","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nimport Cabecalho from '../components/Cabecalho'\r\nimport Rodape from '../components/Rodape'\r\n\r\nconst Inicio = () => {\r\n    return (\r\n        <Container fluid className=\"p-0\">\r\n            <Cabecalho />\r\n            <Row>\r\n                <Col xs={12} lg={6}>\r\n                    <h1>Seja Bem vindo!</h1>\r\n                    <p>Esta é a área administrativa do iComida. </p>\r\n                    <p>Efetue os cadastros através do menu acima</p>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Rodape />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Inicio","export const BACKEND = \"https://backicomida.herokuapp.com/api\"\r\n\r\nconst config = { BACKEND }\r\n\r\nexport default config\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport Cabecalho from '../components/Cabecalho'\r\nimport Rodape from '../components/Rodape'\r\nimport { MdRestaurantMenu, MdMenuBook, MdModeEdit, MdDelete, MdSave } from 'react-icons/md'\r\nimport { BACKEND } from '../constants'\r\n\r\nconst Categorias = () => {\r\n    const valorInicial = { nome: '', status: true }\r\n    const [categoria, setCategoria] = useState(valorInicial)\r\n    const [categorias, setCategorias] = useState([])\r\n    const [carregandoCategorias, setCarregandoCategorias] = useState(false)\r\n    const [erros, setErros] = useState({})\r\n    const [aviso, setAviso] = useState('')\r\n    const [salvandoCategorias, setSalvandoCategorias] = useState(false)\r\n    const [confirmaExclusao, setConfirmaExclusao] = useState(false)\r\n\r\n    const { nome, status } = categoria\r\n\r\n    async function obterCategorias() {\r\n        setCarregandoCategorias(true)\r\n        let url = `${BACKEND}/categorias`\r\n        await fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                //console.log(data)\r\n                setCategorias(data)\r\n            })\r\n            .catch(function (error) {\r\n                console.error('Erro ao obter as categorias: ' + error.message)\r\n            })\r\n        setCarregandoCategorias(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        obterCategorias()\r\n        document.title = 'Cadastro de Categorias'\r\n    }, [])\r\n\r\n    const validaErrosCategoria = () => {\r\n        const novosErros = {}\r\n        //Validação do nome\r\n        if (!nome || nome === '') novosErros.nome = 'O nome não pode ser vazio!'\r\n        else if (nome.length > 30) novosErros.nome = 'O nome informado é muito longo'\r\n        else if (nome.length < 3) novosErros.nome = 'O nome informado é muito curto'\r\n        return novosErros\r\n    }\r\n\r\n    async function salvarCategoria(event) {\r\n        event.preventDefault() // evita que a página seja recarregada\r\n        const novosErros = validaErrosCategoria()\r\n        if (Object.keys(novosErros).length > 0) {\r\n            //Sim, temos erros!\r\n            setErros(novosErros)\r\n        } else {\r\n            setSalvandoCategorias(true)\r\n            const metodo = categoria.hasOwnProperty('_id') ? 'PUT' : 'POST'\r\n            categoria.status = (categoria.status === true || categoria.status === 'ativo') ? 'ativo' : 'inativo'\r\n            let url = `${BACKEND}/categorias`\r\n            await fetch(url, {\r\n                method: metodo,\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(categoria)\r\n            }).then(response => response.json())\r\n            .then(data => {\r\n                (data._id || data.message) ? setAviso('Registro salvo com sucesso') : setAviso('')\r\n                setCategoria(valorInicial) //limpar a tela com os valores iniciais\r\n                obterCategorias() //Atualizar a tela com os registros atualizados\r\n            }).catch(function (error){\r\n                console.error(`Erro ao salvar a categoria: ${error.message}`)\r\n            })\r\n            setSalvandoCategorias(false)\r\n        }\r\n    }\r\n\r\n    async function excluirCategoria(){\r\n        let url = `${BACKEND}/categorias/${categoria._id}`\r\n        await fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n        .then(data => {\r\n            data.message ? setAviso(data.message) : setAviso('')\r\n            obterCategorias()\r\n        })\r\n        .catch(function (error) {\r\n            console.error(`Erro ao excluir a categoria: ${error.message}`)\r\n        })\r\n    }\r\n\r\n    const alteraDadosCategoria = e => {\r\n        setCategoria({ ...categoria, [e.target.name]: e.target.value })\r\n        setErros({})\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"p-0\">\r\n            <Cabecalho />\r\n            <Row>\r\n                <Col xs={12} lg={6}>\r\n                    {/* Formulário de Categorias */}\r\n                    <h4><MdRestaurantMenu /> Cadastro das Categorias</h4>\r\n                    <Form method=\"post\">\r\n                        <Form.Group controlId=\"nome\">\r\n                            <Form.Label>Nome da Categoria</Form.Label>\r\n                            <Form.Control\r\n                                name=\"nome\"\r\n                                placeholder=\"Ex: Churrascarias\"\r\n                                value={nome}\r\n                                onChange={alteraDadosCategoria}\r\n                                isInvalid={!!erros.nome}\r\n                            />\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                {erros.nome}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"status\">\r\n                            <Form.Check type=\"checkbox\" label=\"Ativo\" name=\"status\"\r\n                                onChange={(e) => setCategoria({ ...categoria, [e.target.name]: e.target.checked })}\r\n                                checked={status} />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\"\r\n                            onClick={(e) => salvarCategoria(e)}\r\n                            title=\"Salvar o registro\">\r\n                            {salvandoCategorias\r\n                                ? <><Spinner animation=\"border\" size=\"sm\" /> Aguarde...</>\r\n                                : <><MdSave /> Salvar</>\r\n                            }\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n                <Col xs={12} lg={6}>\r\n                    {/* Listagem de Categorias */}\r\n                    <h4><MdMenuBook /> Listagem das Categorias</h4>\r\n                    {carregandoCategorias &&\r\n                        <>\r\n                            <Spinner animation=\"border\" variant=\"primary\" />\r\n                            <p>Aguarde, enquanto as categorias são carregadas...</p>\r\n                        </>\r\n                    }\r\n                    <Table striped bordered>\r\n                        <thead>\r\n                            <tr className=\"bg-info text-dark\">\r\n                                <th>Nome</th>\r\n                                <th>Status</th>\r\n                                <th>Inclusão</th>\r\n                                <th>Opções</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {categorias.map(item => (\r\n                                <tr key={item._id}>\r\n                                    <td>{item.nome}</td>\r\n                                    <td>{item.status}</td>\r\n                                    <td>{new Date(item.createdAt).toLocaleDateString()}</td>\r\n                                    <td>\r\n                                        <Button variant=\"outline-primary\" title=\"Editar o registro\"\r\n                                        onClick={() => setCategoria(item)}\r\n                                        >\r\n                                            <MdModeEdit />\r\n                                        </Button>\r\n                                        &nbsp;\r\n                                        <Button variant=\"outline-danger\" title=\"Apagar o registro\"\r\n                                        onClick={() => {\r\n                                            setConfirmaExclusao(true)\r\n                                            setCategoria(item)\r\n                                        }}\r\n                                        >\r\n                                            <MdDelete />\r\n                                        </Button>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                            <tr className=\"bg-success text-white\">\r\n                                <td colSpan=\"3\">Total de Registros:</td>\r\n                                <td>{categorias.length}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Toast\r\n                onClose={() => setAviso('')}\r\n                show={aviso.length > 0}\r\n                animation={false}\r\n                delay={4000}\r\n                autohide\r\n                className=\"bg-success\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 10,\r\n                    right: 10\r\n                }}>\r\n                <Toast.Header closeButton={false}>Aviso</Toast.Header>\r\n                <Toast.Body>{aviso}</Toast.Body>\r\n            </Toast>\r\n            <Modal animation={false} show={confirmaExclusao}\r\n            onHide={()=> setConfirmaExclusao(false)}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Confirmação da Exclusão</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Confirma a exclusão da categoria selecionada?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => setConfirmaExclusao(!confirmaExclusao)}>\r\n                    ❌Cancelar\r\n                    </Button>\r\n                    <Button variant=\"success\"\r\n                    onClick={() => {\r\n                        excluirCategoria()\r\n                        setConfirmaExclusao(!confirmaExclusao)\r\n                    }}>\r\n                    ✅Confirmar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Rodape />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Categorias","import React from 'react'\r\nimport { HashRouter, Switch, Route } from 'react-router-dom'\r\n\r\nimport Inicio from '../pages/Inicio'\r\nimport Categorias from '../pages/Categorias'\r\n\r\nexport default function Rotas(){\r\n    return(\r\n        <HashRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Inicio} />\r\n                <Route exact path=\"/categorias\" component={Categorias} />\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Rotas from './routes/Rotas'\n\nconst App = () => {\n  return (\n    <Rotas />\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}